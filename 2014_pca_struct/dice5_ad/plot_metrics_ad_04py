# -*- coding: utf-8 -*-
"""
Created on Fri Jan 15 11:03:38 2016

@author: ad247405
"""

#############################################################################

INPUT_DIR = "/neurospin/brainomics/2014_pca_struct/dice5_ad/results"
INPUT_RESULTS_FILE = os.path.join(INPUT_DIR, "consolidated_results.csv")

OUTPUT_DIR = INPUT_DIR
OUTPUT_RESULTS_FILE = os.path.join(OUTPUT_DIR, "summary.csv")

#pca_frob_0.5snr_0.1_=1578
#pca_frob_0.5_snr_0.5_=1549
#pca_frob_0.5_snr_1.0_=1530

#plot metrics  while TV is increased  
data = pd.read_csv(INPUT_RESULTS_FILE)
 
for snr in (0.5,1):
    data = pd.read_csv(INPUT_RESULTS_FILE)
    data=data[data.snr == snr]
    data=data[data.global_pen == 10]


    d1=data[data.l1_ratio == 0.001]
    d2=data[data.l1_ratio == 0.01]
    d3=data[data.l1_ratio == 0.1]


    d1=d1.sort("tv_ratio")
    d2=d2.sort("tv_ratio")
    d3=d3.sort("tv_ratio")


    plt.plot(d1.tv_ratio, d1.frobenius_test,"green",label=r'$\lambda_1/\lambda_2 = 0.001 $',linewidth=2)
    plt.plot(d2.tv_ratio, d2.frobenius_test,"blue",label=r'$\lambda_1/\lambda_2 = 0.01 $',linewidth=2)
    plt.plot(d3.tv_ratio, d3.frobenius_test,"orange",label=r'$\lambda_1/\lambda_2 = 0.1 $',linewidth=2)
    a = np.empty(5)
    a.fill(1530)
    plt.plot(d1.tv_ratio,a,color='r',label=r'$\ Standard PCA results $',linewidth=2)
   
    plt.ylabel("Frobenius test")
    plt.ylim(1520,1580)
    ax = plt.gca()
    ax.get_yaxis().get_major_formatter().set_useOffset(False)
    plt.draw()
    plt.xlabel(r'TV ratio: $\lambda_{tv}/(\lambda_1 + \lambda_2 + \lambda_{tv})$')
    plt.grid(True)
    plt.legend()
    plt.title(" SNR=1.0 - Global penalization = 10")
   

 